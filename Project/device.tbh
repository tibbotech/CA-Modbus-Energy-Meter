
enum login_comparison_codes
	LC_WILL_ACCEPT,
	LC_WILL_ACCEPT_REPEATED_LOGIN,
	LC_WILL_ACCEPT_LOWER_IN_PROGRESS,
	LC_WILL_REJECT_HIGHER_IN_PROGRESS,
	LC_WILL_REJECT_SAME_IN_PROGRESS
end enum

enum cmd_modes 'in the order of least to highest priority
	CMD_MODE_NONE,
	CMD_MODE_AGGREGATE,
	CMD_MODE_HTTP,
	CMD_MODE_TERMINAL,
	CMD_MODE_UDP
end enum


enum sockets
		'<------------------- sock number for SNTP, change this according to your program
	SOCK_HTTP=3		'3 ~ 3+NUM_HTTP_PORTS-1
	SOCK_DHCP=15
end enum

declare sub device_replace_chr(byref s as string, a as string, b as string)
declare sub reset_login_timeout
declare sub device_login_event(op as cmd_modes)
declare function login(new_login as cmd_modes, cmd_data as string(32), sock as byte) as ok_ng
declare function compare_logins(new_login as cmd_modes, cmd_data as string(32), sock as byte) as login_comparison_codes
declare sub setting_post_write(byref stg_name as string, byref stg_value as string)
declare sub setting_error_detected
declare sub logout()
declare function device_spec_arg_sg(byref setting_name as string,index as byte, byref setting_val as string, byref stg_num as byte, rw as en_stg_rdwr) as en_stg_status
declare function device_setting_check(byref setting_name as string,byref setting_val as string) as ok_ng
declare sub device_login_timer_proc

declare login_mode as cmd_modes
declare login_data as string(32)
declare login_tout as word
declare login_sock as byte
declare index_page_socknum as byte 
