include "global.tbh"


public dim login_mode as cmd_modes
public dim login_data as string(32)
public dim login_tout as word
public dim login_sock as byte
public dim index_page_socknum as byte 

'=============================================================
public sub device_replace_chr(byref s as string, a as string, b as string)
	dim pos as byte
	dim temp as string
	pos = instr(1,s,a,1)
	while pos > 0 
		temp = right(s,len(s)-pos-len(a)+1)
		s = left(s,pos-1)+b+temp
		pos = instr(pos+1,s,a,1)
	wend
end sub

'=============================================================
public sub reset_login_timeout
	select case login_mode
	case CMD_MODE_HTTP:
		login_tout=LOGIN_TIMEOUT
	end select
end sub

'=============================================================
public sub device_login_event(op as cmd_modes)
'Descr: display the icon on LCD for different Login method.

end sub

'=============================================================
public function login(new_login as cmd_modes, cmd_data as string(32), sock as byte) as ok_ng
'looks at the current login attempt, checks it against current situation, makes decision to allow/reject
	if new_login>login_mode then goto l1 'new login attempt has higher priority -- accept it unconditionally
	if new_login=login_mode then
		'same level -- we only accept relogin from the same source
		if login_data=cmd_data then
l1:			'restart timeout timer
			login_mode=new_login
			reset_login_timeout
			login_data=cmd_data
			login_sock=sock
			login=OK
			device_login_event(login_mode)
			exit function
		end if
	end if
	'here when new login attempt can't be accepted
	login=NG
end function

'=============================================================
sub setting_error_detected
end sub

'=============================================================
function device_settings_initialize() as en_stg_status
'initialize device, set the setting modify time to 2000,01,01
	dim result as en_stg_status

	stg_timestamp.ts_daycount = 0
	stg_timestamp.ts_mincount = 0
	stg_timestamp.ts_seconds = 0
	stg_timestamp.ts_milsec = 0
	device_settings_initialize = result
	index_page_socknum=255
end function

'=============================================================
public sub logout()
	login_tout=0
	login_mode=CMD_MODE_NONE
	login_data=""
	device_login_event(CMD_MODE_NONE)
end sub

'=============================================================
public function device_spec_arg_sg(byref setting_name as string,index as byte, byref setting_val as string, byref stg_num as byte, rw as en_stg_rdwr) as en_stg_status

end function


'=============================================================
public function device_setting_check(byref setting_name as string,byref setting_val as string) as ok_ng
	'********** ADDITIONAL CODE MAY BE NEEDED **********
	device_setting_check = OK
end function 

'=============================================================
public sub device_html_proc_cmd
	dim s as string
	dim sSessionID as string(SESSION_LEN)

	s = get_http_argument(sock.httprqstring,"opt=")
	sSessionID = get_http_argument(sock.httprqstring,"session=")
	Select case s
		case "logout":
			sock_setsend("onload = IndexPage()")
			logout()		
	end select
end sub

'=============================================================
public sub device_login_timer_proc
'Descr: universal login timer.
	if login_tout>0 then
		login_tout=login_tout-1
		if login_tout=0 then logout()	
	end if
end sub
